name: Run Command on Issue
on:
  issues:
    types: [opened]
jobs:
  run-command:
    if: github.event.issue.title == 'Run the command'
    runs-on: ubuntu-latest
    permissions:
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Extract and Run Command
        id: extract_and_run
        run: |
          issue_body="${{ github.event.issue.body }}" 
          echo "Command from issue: $issue_body"
      - name: Set Running Status Label
        uses: actions/github-script@v7
        with:
          script: |
            const label_name = 'status: running';
            const label_color = '808080'; // grey
            // Check if the label already exists
            try {
              await github.rest.issues.getLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label_name
              });
            } catch (error) {
              // If the label does not exist, create it
              await github.rest.issues.createLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label_name,
                color: label_color
              });
            }
            // Add the label to the issue
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: [label_name]
            });
      - name: Execute Command
        run: ${{ github.event.issue.body }}
        continue-on-error: true
      - name: Post Job Status Comment
        uses: actions/github-script@v7
        with:
          script: |
            const job_status = '${{ job.status }}';
            const job_url = `${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            const comment_body = `The command has been executed. Job status: ${job_status}. [View job details](${job_url})`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment_body
            });
      - name: Create Status Label
        uses: actions/github-script@v7
        with:
          script: |
            const job_status = '${{ job.status }}';
            const label_name = `status: ${job_status}`;
            let label_color;
            if (job_status === 'success') {
              label_color = '2cbe4e'; // green
            } else if (job_status === 'failure') {
              label_color = 'd73a4a'; // red
            } else if (job_status === 'cancelled') {
              label_color = 'yellow'; // yellow
            }
            // Check if the label already exists
            try {
              await github.rest.issues.getLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label_name
              });
            } catch (error) {
              // If the label does not exist, create it
              await github.rest.issues.createLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label_name,
                color: label_color
              });
            }
            // Remove the "status: running" label
            await github.rest.issues.removeLabel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              name: 'status: running'
            });
            // Add the label to the issue
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: [label_name]
            });
      - name: Close Issue
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              state: 'closed'
            });
